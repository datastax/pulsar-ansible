#
# General settings
# -------------------------------------------
#
show_debug_msg: true
sudo_needed: true

# - System user and group for running Pulsar on remote server hosts
pulsar_user: pulsar
pulsar_user_group: pulsar
allow_group_write_mode: true
file_permission_mode: "{% if allow_group_write_mode is defined and allow_group_write_mode|bool %}0775{% else %}0755{% endif %}"
file_permission_mode_noexec: "{% if allow_group_write_mode is defined and allow_group_write_mode|bool %}0664{% else %}0644{% endif %}"

# - Whether or not to use non-default, customized JVM settings for Pulsar server components
customize_jvm: true
# - Whether or not to use a log home directory that is different from the default (<PULSAR_HOME>/logs)
customize_logdir: true
# - Whether or not to use a GC log home directory that is different from the default (<PULSAR_HOME>/logs)
customize_gc_logdir: true
# - Whether or not to use a data home directory that is different from the default (<PULSAR_HOME>/data)
customize_datadir: true
# - Whether or not to download software releases from external internet URLs
#   * true:  yes
#   * false: copy software releases from local machine
internet_download: false
# - Whehter or not to put the SSH user as part of the "pulsar" group 
ssh_user_in_pulsar_group: true


#
# Software binary release and version
# -------------------------------------------
#
install_jdk: false
openjdk_ver: 11

# - DataStax LunaStreaming release
# pulsarLS_ver_main: "2.8.3"
# pulsarLS_ver_secondary: "1.0.14"
pulsarLS_ver_main: "2.10"
pulsarLS_ver_secondary: "1.0"
pulsarLS_ver_signifant: "{{ pulsarLS_ver_main.split('.')[0] }}.{{ pulsarLS_ver_main.split('.')[1] }}"
pulsarLS_ver: "{{ pulsarLS_ver_main }}.{{ pulsarLS_ver_secondary }}"
# valid luna streaming binary options: "core" (Pulsar core), "" (base), "all (including all packages, I/O conenctors and message filters)"
# use "" (base) as the default 
pulsarLS_bin_opt: ""
pulsarLS_bin_name: "lunastreaming-{% if pulsarLS_bin_opt is defined and pulsarLS_bin_opt != '' %}{{ pulsarLS_bin_opt }}-{% endif %}{{ pulsarLS_ver }}-bin.tar.gz"


#
# Downlaod software binaries from external internet URLs
# -------------------------------------------
#
# - DataStax Luna Streaming download
pulsarLS_download_url_base: "https://github.com/datastax/pulsar/releases/download"
pulsarLS_bin_download_url: "{{ pulsarLS_download_url_base }}/ls{{ pulsarLS_ver_main | replace('.','') }}_{{ pulsarLS_ver_secondary }}/{{ pulsarLS_bin_name }}"


#
# Copy software binaries from local machine
# -------------------------------------------
#
# - Local fodler that has 
#local_bin_homedir: "~/DataStax/pulsar_bin/releases/luna_streaming"
local_bin_homedir: "~/Code_Dev/datastax/download"

#
# Target directories
# -------------------------------------------
#
# - Target package and binary directories
tgt_pkg_homedir: /opt/packages
tgt_pkg_pulsar_dir: "{{ tgt_pkg_homedir }}/pulsar"
tgt_pulsar_inst_dir: /opt/pulsar

# - Target config backup directory
tgt_pulsar_conf_bkup_homedir: "/opt/pulsar_cfgbkup"

# - Target log info directory (Pulsar server log, GC log, breadcrumb file)
tgt_log_homedir: /var/log/pulsar

# - Target log directory
tgt_pulsar_log_homedir: "{% if customize_logdir is defined and customize_logdir|bool %}{{ tgt_log_homedir }}{% else %}{{ tgt_pulsar_inst_dir }}/logs{% endif %}"

# - Target GC log directory
tgt_pulsar_gc_log_homedir: "{% if customize_gc_logdir is defined and customize_gc_logdir|bool %}{{ tgt_log_homedir }}/gclog{% else %}{{ tgt_pulsar_inst_dir }}/logs{% endif %}"


#
# Pulsar client specific settings
# -------------------------------------------
#
pulsar_client_config_file: "{{ tgt_pulsar_inst_dir }}/conf/client.conf"


#
# Configure rack awareness
# -------------------------------------------
#
config_rackAwareness: true
enforceMinNumRackPerWQ: false # default false
# NOTE: this HAS to be bigger than or equal to the available rack count. 
#       otherwise, creating topic will always fail
minNumRackPerWQ: 2            # default 2


#
# How to deploy functions workers
# - none: don't deploy functions workers
# - shared: deploy functions workers as part of brokers
# - dedicated: deploy functions workers on dedicated instances
#
# NOTE: shared functions worker deployment is NOT recommended 
#       for PROD deployment!
# -------------------------------------------
#
deploy_functions_worker: "none"
# deploy_functions_worker: "shared"
# deploy_functions_worker: "dedicated"


#
# Log flush behavior (immediate flush or not)
# - Default value: false
#   turning to true is good for debug purpose; but will impact performance
# - This will impact all Pulsar components, server and client
# -------------------------------------------
#
# immediate_flush: false
immediate_flush: true


#
# Settings for collecting server log files 
# -------------------------------------------
#
# - The directory (on each of the remote hosts) to temporarily save the generated thread dump and heap dump files
tgt_collected_srvfiles_homedir: /opt/pulsar_srvfiles_collection
# - The directory (on the controller machine) to host the collected files (log, config, thread dump, heap dump) from
#   all remote host servers
local_collected_srvfiles_homedir: collected_srv_files


#
# Pulsar security settings
# -------------------------------------------
#
# - local folders that have the security related files for JWT tokens
# NOTE: Please do NOT change this setting (considered as a constant)
local_jwt_src_homedir: "{{ playbook_dir }}/bash/security/authentication/jwt/staging"
# - local folders that have the security related files for TLS certificates
# NOTE: Please do NOT change this setting (considered as a constant)
local_tls_src_homedir: "{{ playbook_dir }}/bash/security/intransit_encryption/staging"

# Target fodlers that have the security related fiels
tgt_pulsar_sec_dir: "{{ tgt_pulsar_inst_dir }}/security"
tgt_jwt_dest_homedir: "{{ tgt_pulsar_sec_dir }}/jwt"
tgt_tls_dest_homedir: "{{ tgt_pulsar_sec_dir }}/tls"

##
# Self signed root CA related settings
#
# - self signed root CA public certificate name
# NOTE: Please do NOT change this setting (considered as a constant)
public_cacert_name: "ca.cert.pem"
# - self signed root CA public certificate expiry days (10 years)
rootca_cert_expire_days: 3650
# - self singed root CA private key password
rootca_key_password: "MyRootCACertPass"

##
# - common subject line in the generated certificate
cert_subj_line: "/C=US/ST=TX/L=Dallas/O=mytest.com"

##
# NOTE: please be careful with these 2 settings. 
#       - if these variables are set to true, existing server side JWT token 
#         and/or TLS certificate files could be replaced by new ones, which
#         may cause interruption of existing client connections. 
#       - by default, these 2 settings should be always set as false!
# - Whehter or not to force replacing the existing Pulsar server side JWT token files
force_tgt_jwt_token: false
# - Whehter or not to force replacing the existing Pulsar server side TLS certificate files
force_tgt_tls_certs: false

#
# >>> Broker related security: JWT token and in-transit TLS encryption
#
# - Wether or not to enable Pulsar JWT authentication and authorization
enable_brkr_authNZ: true
# - Whether or not to enable Pulsar In-Transit TLS encryption
enable_brkr_tls: true

enable_brkr_security: "{{ (enable_brkr_authNZ is defined and enable_brkr_authNZ|bool) or (enable_brkr_tls is defined and enable_brkr_tls|bool) }}"

# - Pulsar super user role name list when authorization is enabled
brkr_super_user_roles: 
  - "cluster_brkr_admin"
  - "cluster_brkr_admin_2"
brkr_super_user_roles_list_str: "{{ brkr_super_user_roles | join(',') }}"

# - Whether or not to skip generating JWT token files on the local host
skip_brkr_jwt_token_generation: false
# - Whether or not to skip generating TLS certificate files on the local host
skip_brkr_tls_certs_generatation: false

##
# Signed (broker) server certificate related settings
#
# - (broker) server certificate expiry days
brkr_cert_expire_days: 365
# - (broker) server private key expiry days
brkr_key_password: "MyBrkrSrvCertPass"

#
# >>> Functions worker related security: JWT token and in-transit TLS encryption
#
# TBD/NOTE: enabling functions worker security still has some issues. Do NOT enable them for now!
#
# - Wether or not to enable Pulsar functions worker JWT authentication and authorization
enable_fwrkr_authNZ: false
# - Whether or not to enable Pulsar functions worker In-Transit TLS encryption
enable_fwrkr_tls: false

enable_fwrkr_security: "{{ (enable_fwrkr_authNZ is defined and enable_fwrkr_authNZ|bool) or (enable_fwrkr_tls is defined and enable_fwrkr_tls|bool) }}"

# - Pulsar functions worker super user role name list when authorization is enabled
fwrkr_super_user_roles: 
  - "cluster_fwrkr_admin"
  - "cluster_fwrkr_admin_2"
fwrkr_super_user_roles_list_str: "{{ fwrkr_super_user_roles | join(',') }}"

# - Whether or not to skip generating Pulsar functions worker JWT token files on the local host
skip_fwrkr_jwt_token_generation: false
# - Whether or not to skip generating Pulsar functions worker TLS certificate files on the local host
skip_fwrkr_tls_certs_generatation: false

##
# Pulsar functions worker server: signed certificate related settings
#
# - (functions worker) server certificate expiry days
fwrkr_cert_expire_days: 730
# - (functions worker) server private key expiry days
fwrkr_key_password: "MyFwrkrSrvCertPass"

##
# Pulsar AdminConsole server: signed certificate related settings
#
# - (Admin Console) server certificate expiry days
anco_cert_expire_days: 730
# - (Admin Console) server private key expiry days
anco_key_password: "MyAncoSrvCertPass"

#
# How to deploy Admin Console
# - shared: deploy Admin Console on one of broker nodes
# - dedicated: deploy Admin Console on dedicated instances
#
#
deploy_adminconsole: "dedicated"

# - Whether or not to enable Admin Console In-Transit TLS encryption
enable_anco_https: true
# - Whether or not to skip generating Pulsar functions worker TLS certificate files on the local host
skip_anco_tls_certs_generatation: false

#
# How to deploy Heart Beat
# - shared: deploy Heart Beat on one of broker nodes
# - dedicated: deploy Heart Beat on dedicated instances
#
#
deploy_heartbeat: "dedicated"
